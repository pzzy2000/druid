package com.alibaba.druid.pool;

import java.sql.PreparedStatement;
import java.sql.SQLException;

public class PhoenixDruidPooledConnection extends DruidPooledConnection {

	public PhoenixDruidPooledConnection(DruidConnectionHolder holder) {
		super(holder);

	}

	private String replace(String sql) {

		if (sql.startsWith("insert")) {
			sql = sql.replace("insert", "upsert");
		} else if (sql.startsWith("update")) {
			throw new RuntimeException("this sql update no  support  plase  insert ");
		} else if (sql.startsWith("create")) {
			throw new RuntimeException("this sql update no  work !  ");
		}
        System.out.println("---------->>>>>>>>         "+sql);
		return sql;

	}

	@Override
	public PreparedStatement prepareStatement(String sql) throws SQLException {

		return super.prepareStatement(replace(sql));
	}

	@Override
	public PreparedStatement prepareStatement(String sql, int resultSetType, int resultSetConcurrency)
			throws SQLException {

		return super.prepareStatement(replace(sql), resultSetType, resultSetConcurrency);
	}

	@Override
	public PreparedStatement prepareStatement(String sql, int resultSetType, int resultSetConcurrency,
			int resultSetHoldability) throws SQLException {

		return super.prepareStatement(replace(sql), resultSetType, resultSetConcurrency, resultSetHoldability);
	}

	@Override
	public PreparedStatement prepareStatement(String sql, int[] columnIndexes) throws SQLException {

		return super.prepareStatement(replace(sql), columnIndexes);
	}

	@Override
	public PreparedStatement prepareStatement(String sql, String[] columnNames) throws SQLException {

		return super.prepareStatement(replace(sql), columnNames);
	}

	@Override
	public PreparedStatement prepareStatement(String sql, int autoGeneratedKeys) throws SQLException {

		return super.prepareStatement(replace(sql), autoGeneratedKeys);
	}

}
