package com.alibaba.druid.pool;

import java.sql.PreparedStatement;
import java.sql.SQLException;

public class PhoenixDruidPooledConnection extends DruidPooledConnection {

	public PhoenixDruidPooledConnection(DruidConnectionHolder holder) {
		super(holder);

	}

	private String replace(String sql) {

		if (sql.startsWith("insert")) {
			return sql.replace("insert", "upsert");
		} else if (sql.startsWith("update")) {
			throw new RuntimeException("this sql update no  support ");
		} else if (sql.startsWith("create")) {
			   if(sql.contains("primary"))
		}

	}

	@Override
	public PreparedStatement prepareStatement(String sql) throws SQLException {

		return super.prepareStatement(sql);
	}

	@Override
	public PreparedStatement prepareStatement(String sql, int resultSetType, int resultSetConcurrency)
			throws SQLException {

		return super.prepareStatement(sql, resultSetType, resultSetConcurrency);
	}

	@Override
	public PreparedStatement prepareStatement(String sql, int resultSetType, int resultSetConcurrency,
			int resultSetHoldability) throws SQLException {

		return super.prepareStatement(sql, resultSetType, resultSetConcurrency, resultSetHoldability);
	}

	@Override
	public PreparedStatement prepareStatement(String sql, int[] columnIndexes) throws SQLException {

		return super.prepareStatement(sql, columnIndexes);
	}

	@Override
	public PreparedStatement prepareStatement(String sql, String[] columnNames) throws SQLException {

		return super.prepareStatement(sql, columnNames);
	}

	@Override
	public PreparedStatement prepareStatement(String sql, int autoGeneratedKeys) throws SQLException {

		return super.prepareStatement(sql, autoGeneratedKeys);
	}

}
